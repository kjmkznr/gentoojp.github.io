#title
#contents

* 宣伝的な事柄 [#i19867c4]

未体験者へのアピールです。

** Paludis, the another package mangler (あのぐちゃぐちゃにする兄貴の半身) [#la2ae6b3]

「Paludis, the another package mangler (あのぐちゃぐちゃにする兄貴の半身)」は公式サイトの冒頭にある言葉です。恐らく背景(兄貴とその悪友達)をジョークにしたものと思います。

2007 年 05 月では Portage に力不足を感じている人に向けられた記事(及びその人達向けの専門的な言葉)が多いようです。

- Paludis FAQ [paludis_faq]_
- Gentoo-Wiki.com [gentoo-wiki_paludis]_
- Wikipedia -- Paludis [wikipedia_paludis]_

乱暴にまとめてみます。GPM/Ports System [gpm]_ の一種です。兄弟がいます。兄弟とは顔も背も好きな色も違いますが、周囲から違いが分らないと言われます。同じ制服を着た時に「そっくりだけど、どの子も違うね」と言ってくれるのは ebuild file [ebuild_files]_ を作成する人だけみたいです。

*** Portage と Paludis と Pkgcore (2007 年 08 月現在) [#mf9d39da]

もう少し詳しく紹介してみます。実際に ebuild repository [repository]_ で GPM/Ports System [gpm]_ に何が可能なのかは個々の実装に依存します。目玉の use_flag [use_flag]_ によるメタ・ディストリビューション [meta-distribution]_ は何処も実装していますが、隔離機能や署名機能やロギング機能になるとばらつきがあります。

- Portage は Gentoo Linux 1.0 (2002 年)の誕生前からあり、2007.0 でも標準採用され続けています。メタ・ディストリビューションを試行錯誤した歴史(書籍によれば 1999 年に概念は生まれていたそうです)と共にあり、必要と判断された機能が後から少し強引に足された形になっています。また内部機能に出来ず外部に任せてしまった機能もありますが、特化した外部ツールはとても優秀です。

- Paludis が優れているのは ebuild file を本家とは別に管理しているグループに向けての機能です。自作パッケージを作成する必要が無いのが GPM/Ports System の特徴ですが、どうしても書かなければならない人(パッチファイル付きバグ報告をする人、自社ソフトウェアを ebuild file で管理する人、コミュニティがサポートしない使い方をする人、et al.) を支援する仕組みが豊富です。

- Pkgcore は純粋な意味でのメタ・ディストリビューションに拘ってます。domain (平行した構築領域)の概念、これは repository, root, use_flag, etc. の組合せより決定されるものですが、例えば数十数百の環境全てを Pkgcore が作成して管理して更新する事を可能にするようです。また、Paludis は自身をアプリケーションではなくフレームワークであるとしていますが、Pkgcore も同じくフレームワークであるとしています。

:ebuild file を作成しない人向けのドキュメント| 黎明期に開発が始まり標準採用され続けている Portage が最も多いです。と言うか他は未だ未だ ebuild file を作成する人に説明している段階です。Portage は書籍になるそうです。

:インターフェイス| どれもコマンドラインです。拡張 atom 表現を利用したりシェル補完利用したりと対話型操作を向上させる方法もありますが、スクリプトを記述して cron 運用させるのが普通のようです。他の GPM/Ports System の中にはグラフィカルなものもあります。

:カスタマイゼーションやパーソナライゼーション| カスタマイゼーションやパーソナライゼーションについても差はありません。セキュリティのエキスパート指向とは別問題ですが、Gentoo はシステムが原因となる間違いを嫌う傾向があります。禁止されている訳ではありませんから競争が盛り上がればやがて登場するかもしれません。

:プライマリ・パッケージ・マネージャとセカンダリ・パッケージ・マネージャ| どれもプライマリです。app-arch/rpm, app-arch/dpkg, app-arch/ipkg-utils, etc. は用意されてます。セカンダリについては prefix プロジェクトが実験を行っています。セカンダリとは Gentoo 以外のディストリビューション、すなわち別のパッケージ・マネージャ(プライマリ)が livefs (rootfs) を管理している世界でジェンツー・パッケージ・マネージャ(セカンダリ)を利用する意味です。

:設定ファイル| Paludis だけが動的な設定ファイルを利用可能です。しかしながら 10 台 20 台の中でコンパイラが動くマシンは 1 台だけ、はどれでも可能です。Pkgcore は Paludis 同様に何も移行手続きをせずとも Portage 側設定ファイルを読み込み動きます。しかしながらこれも Paludis 同様に Pkgcore 向けの機能(具体的にはレポジトリ及びドメインの概念)を使うのであれば専用の設定ファイルを記述しなくてはいけません。

:レポジトリ及びドメインの概念| レポジトリの原則は ebuild file 群です。Paludis は複数のユーザ、複数のサブシステム、複数のレポジトリがデフォルトです。またレポジトリが ebuild file 群である必要がありません。そのためレポジトリの同期手段が RSync 以外にも選べます (CVS, SVN, DARCS, GIT, RSYNC, TAR, SSH, et al.)。Pkgcore は完成度で劣りますが、前者も後者も用意するそうです。Portage は root (portage)、livefs (rootfs)、portage tree (ebuild repository) を念頭にしています。

:VDB| Portage, Paludis, Pkgcore は共存可能でどれも同じデータベースを指定しても構いませんし、別々にしても構いません。VDB とはシステムに何がどんな状態でマージ済みかを保存しているデータベースです。VDB を repository の延長として管理出来るのは Paludis と Pkgcore だけです。Portage は外部ツールがないと速度が問題になるかもしれませんが、Paludis と Pkgcore は内部機能だけでも高速です。

:依存関係計算方法| 同じパッケージをマージするのでも Portage と Paludis では依存関係計算が異なります。Paludis はアルゴリズムを選べますから Portage に近い計算も可能ですが、逆は出来ません。基本的に Pkgcore は Portage と同じです。速度は主に VDB が関係します。

:ソースファイルによるメタ・ディストリビューション| どれも実装しています。Phase はどれも基本 Phase の他に独自 Phase を追加していますが GPMS (厳密に言えばこれは ebuild file を定義したものではなく Gentoo Package Manager を定義したもの)に従った ebuild_file ならば問題無く動きます。

:バイナリファイル| Portage は RPM を作成可能ですが、Paludis は作成出来ません。Gentoo 独特のバイナリパッケージ形式の支援も Portage が一歩先です。ですがむしろ特化した dev-util/catalyst や dev-embedded/gnap を使って下さい。app-arch/rpm, app-arch/dpkg, app-arch/ipkg-utils, etc. は用意されてます。Pkgcore は EBUILD だけでなく DPKG の提案もあり、バイナリパッケージに意欲的です。ただ、RPM や DPKG に関しては完成したとしてもプライマリではなく、セカンダリと思います。

:クロス、分散、キャッシュ等のコンパイラ支援| クロス・コンパイルを始め、sys-devel/distcc や dev-util/ccache 等外部ツールによるコンパイラ支援はどれでも利用可能です。Pkgcore に daemonizing の概念があります。

:Sandbox, GLSA, QA の足された主要機能| 足された主要機能である Sandbox や GLSA や QA が Paludis 及び Pkgcore では最初から揃っています。Sandbox は root:root でさえも登録ディレクトリ以外へのアクセスを禁止させる LD_PRELOAD のハック、GLSA は脆弱性注意報告、QA は品質保証です。

:主要機能と判断されていない選択機能| Portage は必要かもしれないと思われた数々のアイデアがそのまま足され残っています。Pkgcore はおおよそを継承するようですが、追いつかないようです。Paludis は意図的に外しています(しかしながら ebuild file を知らないと何に使うのか分らないものは沢山足されている)。検索機能や分析機能などは特化した app-portage/eix や app-portsge/portage-utils がどれよりも優れています。

:拡張方式| Portage の拡張は FEATURES 方式、つまり内部機能オンオフ指示です。Paludis の拡張は Hook 方式、つまり欲しい機能は Bash スクリプトで追加します。Pkgcore は FEATURES 方式です。

:プログラミング言語| Portage は Python と Bash です。Paludis は C++ と Bash ですが、Python と Ruby のインターフェイスも提供されてます。Pkgcore は C と Python と Bash ですが、Perl のインターフェイスも提供されています。どれも ebuild file の処理に Bash を使っています。自前の解析器ではありません。なので、中心部分は Bash の知識があればどれも理解出来ます。その他の部分について Portage と Pkgcore は Python 向けの dev-python/epydoc、Paludis は C++ 等数多くをサポートする app-doc/doxygen に対応しています。


***「コンピュータにはアーキテクチャ、カーネル、ライブラリ、ユーザランド、ライセンス、etc. があるけど、パッケージ・マネージャも肯綮なんじゃない？」ぐらいに考えると其処に興趣があるかもしれません [#i30bfb8b]

関連記事 [prefix]_ [overlays]_ [use_flag]_ があります。

** パッケージの種類は 11000 以上、枚数は 24000 以上、加えてサードパーティによる追加あり [#cc6d671b]

同じ tree [ebuild_repository]_ を使えば Portage [portage]_ と同じです。

** profile が用意されているアーキテクチャは 20 種以上 [#a7cc3277]

同じ tree [ebuild_repository]_ を使えば Portage [portage]_ と同じです。

** 許可されているライセンス・ファイルは 500 枚以上 [#k5129259]

同じ tree [ebuild_repository]_ を使えば Portage [portage]_ と同じです。

** NASA (米航空宇宙局)では「K-10」「Scout」「Athlete」「Centaur」「Robonaut」「Astronaut」「Command trailer」の月面車が実験中です。その「Scout」に Gentoo Linux が採用されてます。NASA とはコロンビア以来ですね。 [#lafebaac]

そもそも本家には [[PR プロジェクト:http://www.gentoo.org/proj/en/pr/index.xml]]や [[Documentation プロジェクト:http://www.gentoo.org/proj/en/gdp/index.xml]]があります。[[GWN サブプロジェクト:http://www.gentoo.org/proj/en/pr/gwn.xml]]が発行している [[GWN]] や[[公式サイト:http://www.gentoo.org/]]のページを幾つか読んで貰うのが雰囲気を伝えるには早い気がします。

技術的価値以外に、「わくわくする」とか「こころときめく」とかが少なくないようです。例えば NASA (米航空宇宙局)で採用された際のインタビュー記事でもそんなことが書かれてます。デベロッパの視点のもありますが、ユーザの視点のもあります。尖った個人というより、適材適所を実行するメリット云々に近いです。

*** NASA (米航空宇宙局)の資料に Scout を何に使ったのか残されてます [#db3d1a91]

http://ase.arc.nasa.gov/people/pcorina/papers/space06_plexil_final.pdf

* 具体的な事柄 [#zcef4bdb]

「本家への案内」を意識した記事になってます。

** C++ と Bash [#xbc0feb1]

C++ と Bash で記述されています。拡張は Bash で可能です。試してませんが Python や Ruby のインターフェイスもあるようです。Portage と同じく、軽く動かすだけなら Bash の知識も必要ありません。しかしながら、それは標準の Portage で十分かもしれません。

** rpm と dpkg と ebuild [#t1c13aee]

Paludis はバイナリパッケージの優先度が低いようです。

[[バイナリパッケージ]]配布をしている分家 Sabayon (3D デスクトップの完成品)は[[バイナリパッケージを重要視していないけれど Paludis に興じている:http://ciaranm.org/show_post/151]]ようで、「[[メタ・ディストリビューション]]の次」を本家がこのまま考究するにしても分家が講究するにしても増えると面白いですね。

** 配布元に Migrating to Paludis とありますが、Portage を削除しないと駄目ですか？ [#x040f9e7]

むしろ削除は不味いです。必要コマンドである etc-update が Paludis にないからです。2007 年 05 月では共存可能、つまり Block (依存関係集合で要素の衝突を意味する)されないようです。何も移行手続きをせずとも Portage 側設定ファイルを読み込み動く設計です。Paludis 特有の機能を使うなら新しく書く必要があります。

移行のためのガイド [migrating_to_paludis]_ が用意されてます。移行を促進する自動変換スクリプトがあります。

** 連鎖の仕組み、すなわち ebuild.sh を知る必要はありますか？ [#i0bc33f7]

Portage, Pkgcore は FEATURES 方式、すなわち内部機能オンオフです。Paludis は Hook 方式、すなわち必要な機能を自分で用意する必要があります。

各 repository と同期して、VDB と比較して、依存関係構造計算して、etc. と言った全体像の流れは Portage と同じです。Paludis は其れ等に加え ebuild 処理の流れ、つまり Portage での ebuild コマンド相当を知らないと活用出来ません。配布ファイルをフェッチして、エクスパンドして、コンフィギュアして、ビルドテストして、ビルドして、仮インストールして、実インストールして、etc. を段階として分解しているだけです。もう少し詳しいものは関連記事 [ebuild_files]_ にあります。

: phase/setup | Paludis 内の ebuild_f_setup() が呼ばれ、ebuild file 内のユーザが定義した pkg_setup() が実行される。
: phase/unpack | Paludis 内の ebuild_f_unpack() が呼ばれ、ebuild file 内のユーザが定義した src_unpack() が実行される。
: phase/compile | Paludis 内の ebuild_f_compile() が呼ばれ、ebuild file 内のユーザが定義した src_compile() が実行される。
: phase/test | Paludis 内の ebuild_f_test() が呼ばれ、ebuild file 内のユーザが定義した src_test() が実行される。
: phase/install | Paludis 内の ebuild_f_install() が呼ばれ、ebuild file 内のユーザが定義した src_install() が実行される。
: phase/preinst | Paludis 内の ebuild_f_preinst() が呼ばれ、ebuild file 内のユーザが定義した pkg_preinst() が実行される。
: phase/postinst | Paludis 内の ebuild_f_postinst() が呼ばれ、ebuild file 内のユーザが定義した pkg_postinst() が実行される。
: phase/prerm | Paludis 内の ebuild_f_prerm() が呼ばれ、ebuild file 内のユーザが定義した pkg_prerm() が実行される。
: phase/postrm | Paludis 内の ebuild_f_postrm() が呼ばれ、ebuild file 内のユーザが定義した pkg_postrm() が実行される。
: phase/config | Paludis 内の ebuild_f_config() が呼ばれ、ebuild file 内のユーザが定義した pkg_config() が実行される。明示しなければ実行されない。
: phase/nofetch | Paludis 内の ebuild_f_nofetch() が呼ばれ、ebuild file 内のユーザが定義した pkg_nofetch() が実行される。明示しなければ実行されない。

** 2007 年 05 月の公式マニュアルだけでは足りない人への説明 [#eeaedd23]

公式サイトのマニュアル [paludis]_ で確認して下さい。

*** 用語 [#q4a074e2]

関連記事 [memorandum_about_Paludis(1)]_ があります。

*** 静的な設定ファイル [#ed434246]

関連記事 [memorandum_about_Paludis(2)]_ があります。

*** 動的な設定ファイル [#r3038f57]

関連記事 [memorandum_about_Paludis(3)]_ があります。

*** 基本操作 [#pfdac078]

関連記事 [memorandum_about_Paludis(4)]_ があります。

*** 仕組み [#zf5032ac]

関連記事 [memorandum_about_Paludis(5)]_ があります。

*** ebuild 管理だけでなく Backup (CVS, SVN, DARCS, GIT, RSYNC, TAR, SSH, et al.) 管理にも使う [#h40800c8]

関連記事 [memorandum_about_Paludis(6)]_ があります。

*** ebuild file を理解せずに特定パッケージだけコンパイルフラグを追加 [#jdb3c511]

関連記事 [memorandum_about_Paludis(7)]_ があります。

*** Hook (メール等との連携可能) [#f31a4b78]

関連記事 [memorandum_about_Paludis(8)]_ があります。

*** QA (品質保証) [#ua159dd6]

関連記事 [memorandum_about_Paludis(9)]_ があります。

*** GLSA (脆弱性注意報告) [#a0a7e7c1]

関連記事 [memorandum_about_Paludis(10)]_ があります。

*** 分散コンパイル [#d3009fea]

関連記事 [memorandum_about_Paludis(11)]_ があります。

*** コンパイルのキャッシュ [#z6bb6123]

関連記事 [memorandum_about_Paludis(12)]_ があります。

*** クロスコンパイル [#y323840f]

関連記事 [memorandum_about_Paludis(13)]_ があります。

*** VDB (データベース) [#ce60d06f]

関連記事 [memorandum_about_Paludis(14)]_ があります。

*** CRAN (統計解析環境の R) [#c7668abd]

関連記事 [memorandum_about_Paludis(15)]_ があります。

*** バイナリパッケージ [#kc630a73]

関連記事 [memorandum_about_Paludis(16)]_ があります。

* 思想的な事柄 [#cd54967f]

sys-apps/baselayout 同様に Gentoo コミュニティの中でも独特な強い理想があるようです。一度や二度ではなく議論になってます。作品ではなく才能を欲しがる人もいるのですから……の印象もありますが、それでも前進する辺りはそれだけ Gentoo が好きな集団なのだと思われます。


_____



.. [gpms] http://dev.gentoo.org/~spb/pms.pdf が PDF です。

.. [gpm] http://wiki.gentoo.gr.jp/index.php?Gentoo_Package_Manager に関連記事があります。

.. [meta-distribution] http://wiki.gentoo.gr.jp/index.php?%5B%5B%A5%E1%A5%BF%A1%A6%A5%C7%A5%A3%A5%B9%A5%C8%A5%EA%A5%D3%A5%E5%A1%BC%A5%B7%A5%E7%A5%F3%5D%5D に関連記事があります。 

.. [sandbox] root:root でさえも登録ディレクトリ以外へのアクセスを禁止させる LD_PRELOAD のハック。

.. [glsa] 脆弱性注意報告。

.. [qa] 品質保証。

.. [ebuild_repository] http://wiki.gentoo.gr.jp/index.php?repository に repository, tree, overlays の関連記事があります。

.. [paludis_faq] http://paludis.pioto.org/faq.html は公式サイトです。

.. [gentoo-wiki_paludis] http://gentoo-wiki.com/HOWTO_Use_Portage_alternative_-_Paludis は非公式サイトです。

.. [wikipedia_paludis] http://en.wikipedia.org/wiki/Paludis は非公式サイトです。

.. [portage] http://www.gentoo.org/proj/en/portage/index.xml は公式サイトです。

.. [paludis] http://paludis.pioto.org/ は公式サイトです。

.. [pkgcore] http://www.pkgcore.org/ は公式サイトです。

.. [vdb] システムに何がどんな状態でマージ済みかを保存しているデータベース。

.. [features] ユーザが機能をオンオフ調整する portage 変数。pkgcore は採用、paludis は不採用。

.. [restrict] デベロッパが機能をオンオフ調整する ebuild 変数。

.. [digest/manifest] 誰が作成したものかを保証する機能。

.. [ebuild_file] http://wiki.gentoo.gr.jp/index.php?ebuild_files に関連記事があります。

.. [prefix] http://wiki.gentoo.gr.jp/index.php?prefix に関連記事があります。

.. [overlays] http://wiki.gentoo.gr.jp/index.php?overlays に関連記事があります。

.. [use_flag] http://wiki.gentoo.gr.jp/index.php?USE_flag に関連記事があります。

.. [profile] http://wiki.gentoo.gr.jp/index.php?profile に関連記事があります。

.. [memorandum_about_Paludis(1)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(1) に関連記事があります。

.. [memorandum_about_Paludis(2)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(2) に関連記事があります。

.. [memorandum_about_Paludis(3)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(3) に関連記事があります。

.. [memorandum_about_Paludis(4)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(4) に関連記事があります。

.. [memorandum_about_Paludis(5)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(5) に関連記事があります。

.. [memorandum_about_Paludis(6)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(6) に関連記事があります。

.. [memorandum_about_Paludis(7)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(7) に関連記事があります。

.. [memorandum_about_Paludis(8)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(8) に関連記事があります。

.. [memorandum_about_Paludis(9)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(9) に関連記事があります。

.. [memorandum_about_Paludis(10)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(10) に関連記事があります。

.. [memorandum_about_Paludis(11)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(11) に関連記事があります。

.. [memorandum_about_Paludis(12)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(12) に関連記事があります。

.. [memorandum_about_Paludis(13)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(13) に関連記事があります。

.. [memorandum_about_Paludis(14)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(14) に関連記事があります。

.. [memorandum_about_Paludis(15)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(15) に関連記事があります。

.. [memorandum_about_Paludis(16)] http://wiki.gentoo.gr.jp/index.php?memorandum_about_Paludis(16) に関連記事があります。

.. [migrating_to_paludis] http://paludis.pioto.org/migration.html

________________


- [[Gentoo_Package_Manager]], [[Portage]], [[Paludis]], [[Pkgcore]]
- [[portageとその周辺ツール]], [[portageに関連しそうな言葉]]
- [[ebuildパッケージ]], [[ebuildに関連しそうな言葉]]
- [[memorandum_about_Paludis(1)]], [[memorandum_about_Paludis(2)]], [[memorandum_about_Paludis(3)]], [[memorandum_about_Paludis(4)]], [[memorandum_about_Paludis(5)]], [[memorandum_about_Paludis(6)]], [[memorandum_about_Paludis(7)]], [[memorandum_about_Paludis(8)]], [[memorandum_about_Paludis(9)]], [[memorandum_about_Paludis(10)]], [[memorandum_about_Paludis(11)]], [[memorandum_about_Paludis(12)]], [[memorandum_about_Paludis(13)]], [[memorandum_about_Paludis(14)]], [[memorandum_about_Paludis(15)]], [[memorandum_about_Paludis(16)]]
- [[repository]], [[USE_flag]], [[profile]], [[prefix]], [[overlays]]
- [[ebuild_files]], [[ebuild_metadata(ebuild-defined_variables)]], [[ebuild_phase(ebuild-defined_functions)]], [[the_ebuild_environment(defined_variables)]], [[the_ebuild_environment(defined_commands)]], [[bash_for_ebuild]]

________________


- [2007-05-04] 気に入ったら書き足して下さい。 (yoshino)
- [2007-08-05] Pkgcore を追加しました。NASA (米航空宇宙局)の資料を書き直しました。(yoshino)
