#contents
#title

*宣伝的な事柄 [#xc38cb53]

未体験者へのアピールです。

**メタ・ディストリビューションとは... [#ac1d36c8]

>私たちは、どんなアプリケーションに対しても、どんなニーズに対しても、自動的に最適化とカスタマイズができる特別仕様のLinuxをプロデュースしています。もの凄いパフォーマンス、自由なカスタマイズ性、そして一流のユーザーや開発者のコミュニティ。そのすべてが、Gentooが培ってきた品質の証明です。Portageと呼ばれるテクノロジーのおかげで、Gentoo Linuxは理想的なセキュア・サーバにも、開発用ワークステーションにも、プロ仕様のデスクトップにも、ゲーム用システムにも、組み込み用ソリューションにも、その他あなたが必要などんなものにも、姿を変えることができます。その無限とも言える順応性の高さから、私たちはGentoo Linuxをメタディストリビューションと呼んでいます。

以上、[[About Gentoo Linux:http://www.gentoo.org/main/en/about.xml]] より転載。

**愛好者はこれを何に使っているのか [#cab8763e]

そもそも本家には [[PR プロジェクト:http://www.gentoo.org/proj/en/pr/index.xml]]や [[Documentation プロジェクト:http://www.gentoo.org/proj/en/gdp/index.xml]]があります。[[GWN サブプロジェクト:http://www.gentoo.org/proj/en/pr/gwn.xml]]が発行している [[GWN]] や[[公式サイト:http://www.gentoo.org/]]のページを幾つか読んで貰うのが雰囲気を伝えるには早い気がします。

技術的価値以外に、「わくわくする」とか「こころときめく」とかが少なくないようです。例えば NASA (米航空宇宙局)で採用された際のインタビュー記事でもそんなことが書かれてます。デベロッパの視点のもありますが、ユーザの視点のもあります。尖った個人というより、適材適所を実行するメリット云々に近いです。

***1000 台以上の 64 ビットシステムで Gentoo を動かすのが夢だと言うシカゴの loyola 大学から HPCN (高性能計算及び並列処理に関する研究活動の団体) に参加されている George K. Thiruvathukal 教授が語るメリットとは... [#y1c3fad9]

> {原文に明記されてませんが、PC クラスタの Beowulf の話です。その後、国内企業も参加した SC06 (ハイパフォーマンス分野に関する国際会議)にて Gentoo Linux で動くマシン( 972 x 6-core little endian MIPS64 nodes と 650 MIPS64 nodes )が SiCortex 社のブース (#629) に登場しました。}

> さらに悪いことに、(Gentoo以外の)アプローチでは、極限のパフォーマンスが要求されるハイパフォーマンスコンピューティングという分野において、どうしても限界があったのです。Gentooで特に気に入ったのは、簡単にカーネルとパッケージをターゲットとするプロセッサ(ファミリー)に最適化できることでした。...snip...

> 研究所も含めて、私達の部署のLinuxは全部Gentooですよ。透過的な認証にはOpenLDAPを、大規模なストレージサーバにはDellの PowerEdge(すこしてこずりましたが、これもGentooが動作しています)を採用していますし、自作したサーバでメールとwebサーバを運用しています。...snip...今のところ問題はそんなに多くありません。特に、ハックやプログラミングの精神を持ちつづけていられることにはとても感謝しています。だって、もう30代後半ですし、君達のような20代の連中に追い付かなければいけないですしね。...snip...

> 以前から、私はまともだとは思われていなかったので、その時の反応も同じでしたね(笑。わたしの考えでは、重要なシステムであれば何を使ったところでリスクは常に存在します。ソフトウェアを最新にしなかったり、セキュリティアドバイザリを追いかけなかったり、推奨される対策をとらなかったりしていては、「ミッションクリティカル」な結果を出しているとはいえないでしょう？

> 私達の考えでは、クリティカルなシステムには最高のハードウェアが必要です。現実には、OSがハードウェアの性能を越えることはありません。クリティカルなシステムには、強力なプロセッサ、メモリ、I/Oパフォーマンスを持つハイエンドのハードウェアを使います。Gentooの安全性は他と変わらないと思っています。ニュースレターに毎週掲載されるアップデートを見る限り、Gentooのメンバーはセキュリティを重要視しているようですしね。他のディストリビューションでも、同じようにユーザに情報を公開しているんでしょうか？

> 商用ソフトウェアを差別することはありません。けれども、予算が限られている場合、商用ソフトウェアがトラブルの元になることもあります。...snip...

> Gentooに考えてほしいのは、

> 1. メタデータの同期に時間がかかりすぎです。システムが1つなら大きな問題にはならないでしょうけれど、大規模なシステムでは問題になります。1台の「マスタ」を同期させて、ローカルでの同期を行うやりかたについてきちんと書かれたドキュメントがあるべきです。

> 2. サーバの/etcのアップデート作業は深刻な問題です。回避策はあるのですけど、それでも/etc以下の重要なファイル(conf.d/net、fstabやmodules.autoload.d/kernel-2.6)が壊れてしまわないように実際に目で確認しなければならないことが多いです。

過去の [[GWN]] より転載。

**Portage の得意分野 [#o7ad5681]

[[メタ・ディストリビューション]]する必要があるもの全てです。

[[ビルド]]の連鎖を制御するものなので自分でどうにかできるものに [[Portage]] はかなり便利ですが、そうでないものは頼ることになります。その時に「あれ、こういったのは [[Portage]] が得意だと思うけれど・・・」や「意外にも [[Gentoo]] が一番良かった!!」というのはあります。

ちなみにパッケージ範囲が違うので直接の比較はできませんが、120 以上の分類の中[[セキュリティ]]や [[GDP]] を除いた開発者で 10 人以上在籍するのは、AMD64(プロジェクト中最大派閥)、 Apache、 Base([[ポーテージ]]を含まない[[ジェンツー]])、 GCC、 Java、 Kernel、 MIPS、 Mobile(デバイス)、 Mail(qmail 等は含まない)、 NetMon(ネットワークモニター)、 PPC、 Sci(サイエンス)、 SPARC、 Toolchain(glibc, binutils, gcc, linux-headers)、 Video、 Web-apps(ウェブブラウザ等を含まないウェブアプリケーション)、 X86となっています。以上は 2005 年 09 月の状況です。仮想化チームなど増えてます。

むしろ [[GWN]] のバグランキング辺りが活発度の目安になるかもしれません。

*具体的な事柄 [#x8b32b32]

「本家への案内」を意識した記事になってます。

**メタ・ディストリビューションに夢中にならない [#i0259b5d]

10 回も 20 回もするものではありません。ユーザが指示するカスタマイゼーション機能は強化されても自動学習するパーソナライゼーション機能はむしろ外されています。[[ハンドブック]]でも分りますが、システム側が原因の間違いを起こさないが優先されてます。候補の提案ぐらいは復活しても良いと思いますが。明らかな間違いでもなければ暫く使ってみてから再調整してみて下さい。

**メタ・ディストリビューションの概念 [#tbcb22db]

何十何百と続く[[ビルド]]の連鎖を、何十何百回のコンパイルフラグ指定ではなく、一回の [[USEフラグ]]のオンオフと [[profile]] の指定で制御するものです。

古いシステム全体を更新するのに便利な `emerge world` ですが、もの凄い量が対象になります。注意して下さい。最低限必要なビルド?は [[GLSA]] だけで、`emerge world` ではありません。[[GLSA]] こと "[[Gentoo Linux Security Announcements:http://wiki.gentoo.gr.jp/index.php?GentooLinuxSecurityAnnouncements]]" (または "[[Gentoo Linux Security Advisories:http://wiki.gentoo.gr.jp/index.php?GentooLinuxSecurityAdvisories]]") は [[Securityプロジェクト:http://www.gentoo.org/proj/en/security/index.xml]]による脆弱性注意報告です。

***ヴァージョン と リヴィジョン [#u2da0788]

同じヴァージョンのソースファイルを対象にする [[*.ebuild]] ファイルのリヴィジョンが上昇される時があります。python-2.3.5 と python-2.3.5-r1 のような関係のことです。[[コミュニティの方針:http://www.gentoo.org/doc/ja/policy.xml]]によれば、微調整では変更しないため[[マージ]]されるファイルが異なるぐらいの変化があるとされています。`emerge --pretend --changelog --verbose python` で理由を確認できますので、必要以上に敏感になり、[[コンパイル]]を繰りかえす事もありません。ほとんどが関係ありません。セキュリティ上の[[バグ報告]]は [[GLSA]] として発表されます。

***stable と testing と mask [#r0243356]

コミュニティは [[stable]] を推奨しています。[[testing]] は「公開実験中です。協力者求む!!」の意味で使われています。[[mask]] をいじったら是非そのパッチファイルを[[バグ報告]]して下さい。[[GLEP]] の 041 より [[QA]] (品質保証)と関係してパッケージテスト専用のスタッフも迎えようとしています。

***メンテナンス [#wd3a83b9]

1 つのパッケージで、○○のソースコード(ヘッダファイル含む)、○○のドキュメント、○○の操作に便利な [[*.el]] や [[*.py]] のちょっとしたスクリプトをまとめて扱っています。最後のは [[USEフラグ]]用で、ファンサイトで配布されているものだったりもします。AMD64 でも SPARC64 でも IA64 でも同じ1つの [[*.ebuild]] です。一次配布元からリリースされたものは [[mask]] に登録され、やがて [[testing]] に移り、実験期間終了のアーキテクチャから順に [[stable]] になります。進展速度や保守期間は各チームで判断されます。

個人単位ではなくチーム単位ですがおおよそ人気に左右されます。1つのパッケージに何人も登録したり、1人が幾つもの担当をしていたりしています。強い熱意が反映されているパッケージもあります。詳しくは [[metadata.xml]] で分ります。メンテナンスチームと [[stable]], [[testing]], [[mask]] を決めるテストチームと脆弱性注意報告チームは別々に存在します。全ての窓口は [[Bugtracking System (Bugzilla):http://wiki.gentoo.gr.jp/index.php?BugtrackingSystem]] です。

**USE フラグとは... [#q87a75ab]

[[USEフラグ]]に関連記事があります。

***KEYWORDS とは... [#ldcf0cc3]

[[USEフラグ]]ではありません。[[KEYWORDS]] に関連記事があります。

***最適化 [#pa8882b9]

[[dev-util/catalyst]] 以降、デフォルトのコンパイルフラグはかなり抑えられています。[[QA]] (品質保証)、[[メタ・ディストリビューション]]、ハードウェア...理由は長くなるので省きます。解決策の1つになると思われるパッケージ毎にコンパイルフラグを制御する機能は今のところありません。[[最適化]]に関連記事があります。

**ビルド連鎖を中断する [#u2485a0a]

[[emerge]] プロセスを kill するだけです。処理時間の 99% である [[sandbox]] 内、つまり[[ビルド]]中であれば問題ありません。再開するには再び同じ命令をすれば再開位置を自動計算してくれます。各パッケージの最後の数秒間、つまり install コマンド中は避けて下さい。再[[マージ]]だけでは駄目な場合があるからです。

[[Portage]]の処理が気になるのであれば、プロセス優先度を下げ、非 root 権限で、[[app-misc/screen]] の screen コマンド内で [[sys-apps/portage]] の [[emerge]] コマンドを実行させます。

**X86 でも SH でも ARM でも同じ *.ebuild を利用しています [#j9e2efe4]

X86 以外にも数多くのアーキテクチャ (ALPHA, AMD64, ARM, HPPA, IA64, MIPS, PPC32/64, SH, S390, SPARC32/64, X86) を対象にしています。[[profile]] によると更に増えるようです。デスクトップでもメインフレームでも同じ [[*.ebuild]] が動きます。

そのパッケージのソースコードが対応していれば、[[*.ebuild]] は同じものです。別の [[*.ebuild]] をダウンロードする必要はありません。(但しソースコードが別配布なものは別パッケージになります。)同じく、共有も分散もクロスもサポートしています。

複数アーキテクチャをサポートしている場合における開発者側の基準が X86 なので、そのまま受け入れないほうがよいものもあります。その場合は調整してもう一度[[メタ・ディストリビューション]]して下さい。慣れるまでは、主軸が IA64 や SPARC64 でも、X86 か AMD64 (か PPC32) のどれか一台は用意した方がよいかもしれません。

**メタ・ディストリビューションと ebuildパッケージの自作 [#i313002a]

メインフレームからデスクトップまで、PPC64 から MIPS まで、11000 種以上のパッケージ、24000 枚以上の [[*.ebuild]] が用意されています。しかし希望するパッケージが無い及び希望するカスタマイズができない時もあります。

コミュニティの窓口である [[Bugtracking System (Bugzilla):http://wiki.gentoo.gr.jp/index.php?BugtrackingSystem]] に相談する方法があります。[[QA]] (品質保証)や担当者を決めたりすると言った手続きがあるため数週間は覚悟します。単純なアップデートだけなら [[*.ebuild]] 本文を編集せずに改名だけで出来る様に設計されてます。[[Bugzilla例文集]]に関連記事があります。

[[ebuildパッケージ]]は [[Bash]] の知識だけで作成できますが、rpmパッケージや dpkgパッケージより簡単かどうかは好みに左右されます。どれを選んでも知識は要求されます。どれを選んでもローカルで動くだけなら適当に記述しても動きます。自作しなくとも [[USEフラグ]]でカスタマイズできるのがバイナリファイル形式パッケージ管理システムに対するソースファイル形式パッケージ管理システムの魅力であるはずです。逆に言えばローカル使用の目的だけに自作するならその魅力は失なわれてしまいます。本家に登録すれば自分以外が保守してくれます。余裕があれば助けたり、余裕がなければ助けられたり、循環する世界が理想と思われます。[[ebuildパッケージ]]に関連記事があります。

*思想的な事柄 [#sa55cd95]

[[ジェンツー]]の初期は X86 ファミリだけだったようです。

**より強いメタ・ディストリビューションの実現へ [#s3a650ed]

[[GLEP]] がコミュニティの今後の方針です。「Portage というソフトウェア」だけでは駄目で、メタ・ディストリビューションを維持させるには「現場に関わる大勢のメンテナ」を必要とします。2006.0 で[[インストーラ]]、2006.1 にて [[profile]] へデスクトップ用の設定、2007.0 で……。[[ジェンツー委員会]]は今後をいろいろ考えているようです。[[メタ・ディストリビューション]]に関連記事があります。

sys-apps/portage-2.1 では [[GLEP]] で予定されていた幾つかの機能が加えられています。

-カーネル、Cライブラリ、ユーザランド、アーキテクチャを自由に組合せる機能
-ライセンスを自由に組合せる機能

Gentoo System に必要な機能を定義した [[GPMS]] が提出されました。これにより Gentoo System 自身を[[メタ・ディストリビューション]]、つまり複数の GPM/Ports System から選ぶ事が出来ます。2007 年 05 月の時点では [[Portage]] と [[Paludis]] が有名です。2007.0 の標準は [[Portage]] です。


________

[[Gentoo]] ([[Gentoo Linux:http://wiki.gentoo.gr.jp/index.php?GentooLinux]]) の詳細は[[プロジェクトリスト:http://www.gentoo.org/proj/en/metastructure/projects.xml]]が確実です。短時間で概要を説明しようとしたものが以下にあります。気にいったら足して下さい。

- [[Gentoo]] ([[Gentoo Linux:http://wiki.gentoo.gr.jp/index.php?GentooLinux]]), [[Gentoo FAQ:http://www.gentoo.org/doc/ja/?catid=faq]], [[GentooJP FAQ:http://wiki.gentoo.gr.jp/index.php?%5B%5B%A3%C6%A3%C1%A3%D1%5D%5D]]
- [[インストール]], [[Stage]], [[GRP]], [[Portageツリー]]
- [[インストールした後にできること]], [[日本語入力設定事例集]], [[日本語デスクトップ環境/パッケージ]]
- [[Gentooが採用している技術]]
- [[コミュニティとの連絡手段]], [[Bugtracking System (Bugzilla):http://wiki.gentoo.gr.jp/index.php?BugtrackingSystem]]
- [[本家に関連しそうな言葉]], [[GLEP]], [[コピーライト]], [[ライセンス]]

[[Portage]] ([[Gentoo System:http://wiki.gentoo.gr.jp/index.php?GentooSystem]]) の詳細は[[ドキュメントリスト:http://www.gentoo.org/doc/ja/list.xml]]が確実です。短時間で概要を説明しようとしたものが以下にあります。気にいったら足して下さい。

- [[Portage]] ([[Gentoo System:http://wiki.gentoo.gr.jp/index.php?GentooSystem]])
- [[メタ・ディストリビューション]], [[USEフラグ]], [[profile]], [[catalyst]], [[GNAP]]
- [[コンパイル]], [[バイナリパッケージ]]
- [[portageとその周辺ツール]], [[portageに関連しそうな言葉]]
- [[ebuildパッケージ]], [[ebuildに関連しそうな言葉]]

________

-[2005-09-19] (yoshino)
-[2006-09-17] 自分が調べた際のメモをほぼそのまま貼りつけているだけだったのを省察しました。 (yoshino)
-[2007-05-04] GPMS (yoshino)
